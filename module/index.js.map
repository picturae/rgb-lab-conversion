{"version":3,"file":"index.js","sources":["../src/data.js","../src/cases.js","../src/index.js"],"sourcesContent":["const whitePoint = {\n    D50: [0.96422, 1, 0.82521],\n    D65: [0.95047, 1, 1.08883],\n}\n\nconst rgbSpaces = {\n    AdobeRGB1998: {\n        name: 'Adobe RGB (1998)',\n        gamma: 2.19921875,\n        matrix: {\n            D50: {\n                X: { red: 0.6097559, green: 0.2052401, blue: 0.149224 },\n                Y: { red: 0.3111242, green: 0.625656, blue: 0.0632197 },\n                Z: { red: 0.0194811, green: 0.0608902, blue: 0.7448387 },\n            },\n            D65: {\n                X: { red: 0.5767309, green: 0.185554, blue: 0.1881852 },\n                Y: { red: 0.2973769, green: 0.6273491, blue: 0.0752741 },\n                Z: { red: 0.0270343, green: 0.0706872, blue: 0.9911085 },\n            },\n        },\n        whitepoint: 'D65',\n    },\n    eciRGB_v2: {\n        name: 'eciRGB v2',\n        gamma: 1.8,\n        matrix: {\n            D50: {\n                X: { red: 0.6502043, green: 0.1780774, blue: 0.1359384 },\n                Y: { red: 0.3202499, green: 0.6020711, blue: 0.0776791 },\n                Z: { red: 0.0, green: 0.067839, blue: 0.757371 },\n            },\n            D65: {\n                X: { red: 0.67, green: 0.21, blue: 0.14 },\n                Y: { red: 0.33, green: 0.71, blue: 0.08 },\n                Z: { red: 0, green: 0.08, blue: 0.78 },\n            },\n        },\n        whitepoint: 'D50',\n    },\n    sRGB: {\n        name: 'sRGB IEC61966-2.1',\n        gamma: -2.2,\n        matrix: {\n            D50: {\n                X: { red: 0.4360747, green: 0.3850649, blue: 0.1430804 },\n                Y: { red: 0.2225045, green: 0.7168786, blue: 0.0606169 },\n                Z: { red: 0.0139322, green: 0.0971045, blue: 0.7141733 },\n            },\n            D65: {\n                X: { red: 0.4124564, green: 0.3575761, blue: 0.1804375 },\n                Y: { red: 0.2126729, green: 0.7151522, blue: 0.072175 },\n                Z: { red: 0.0193339, green: 0.119192, blue: 0.9503041 },\n            },\n        },\n        whitepoint: 'D65',\n    },\n}\n\nexport { whitePoint, rgbSpaces }\n","// for test and demo\nconst cases = {}\ncases.squares = [\n    {\n        rgb: [51, 51, 51],\n        eciRGB_v2: [20, 0, 0],\n        AdobeRGB1998: [20, 0, 0],\n        sRGB: [21, 0, 0],\n    },\n    {\n        rgb: [204, 204, 204],\n        eciRGB_v2: [80, 0, 0],\n        AdobeRGB1998: [83, 0, 0],\n        sRGB: [82, 0, 0],\n    },\n    {\n        rgb: [154, 51, 52],\n        eciRGB_v2: [40, 53, 34],\n        AdobeRGB1998: [42, 53, 33],\n        sRGB: [37, 44, 24],\n    },\n\n    {\n        rgb: [153, 51, 153],\n        eciRGB_v2: [43, 55, -26],\n        AdobeRGB1998: [44, 60, -31],\n        sRGB: [40, 52, -35],\n    },\n    {\n        rgb: [255, 255, 51],\n        eciRGB_v2: [97, -11, 99],\n        AdobeRGB1998: [98, -16, 96],\n        sRGB: [98, -15, 87],\n    },\n    {\n        rgb: [255, 102, 52],\n        eciRGB_v2: [69, 78, 79],\n        AdobeRGB1998: [69, 69, 68],\n        sRGB: [63, 58, 58],\n    },\n\n    {\n        rgb: [50, 51, 255],\n        eciRGB_v2: [39, 39, -100],\n        AdobeRGB1998: [36, 57, -104],\n        sRGB: [36, 55, -101],\n    },\n    {\n        rgb: [52, 255, 51],\n        eciRGB_v2: [83, -128, 74],\n        AdobeRGB1998: [84, -121, 79],\n        sRGB: [88, -75, 74],\n    },\n    {\n        rgb: [255, 51, 52],\n        eciRGB_v2: [65, 91, 77],\n        AdobeRGB1998: [64, 86, 63],\n        sRGB: [57, 75, 52],\n    },\n]\n\nexport { cases }\n","import { whitePoint, rgbSpaces } from './data.js'\nimport { cases } from './cases.js'\n\nconst rgbLabConversion = (function() {\n    const inverseSRGB = function(fractionedRGB, iccProfile) {\n        // http://www.brucelindbloom.com/index.html?Eqn_RGB_to_XYZ.html\n        const inversedSRGB = fractionedRGB.map(channel => {\n            if (channel > 0.04045) {\n                channel = Math.pow((channel + 0.055) / 1.055, 2.4)\n            } else {\n                channel = channel / 12.92\n            }\n            return channel\n        })\n        return inversedSRGB\n    }\n    const inverseLx = function(fractionedRGB, iccProfile) {\n        // http://www.color.org/chardata/rgb/ecirgb.xalter\n        // Inverse eciRGB Companding\n        const inversedLx = fractionedRGB.map(channel => {\n            if (channel > 0.008856) {\n                channel = Math.pow((channel + 0.16) / 1.16, 3)\n            } else {\n                channel = channel / 9.033\n            }\n            return channel\n        })\n        return inversedLx\n    }\n    const inverseGamma = function(fractionedRGB, iccProfile) {\n        // http://www.brucelindbloom.com/index.html?Eqn_RGB_to_XYZ.html\n        // https://www.easyrgb.com/en/math.php\n        const inversedGamma = fractionedRGB.map(channel =>\n            Math.pow(channel, iccProfile.gamma),\n        )\n        return inversedGamma\n    }\n\n    const XYZ_CIELab = function(xyzArray, whitePoint) {\n        const sizedXYZ = xyzArray.map(\n            (channel, index) => channel / whitePoint[index] / 100,\n        )\n\n        const [X, Y, Z] = sizedXYZ.map((channel, index) => {\n            if (channel > 0.008856) {\n                channel = Math.pow(channel, 1 / 3)\n            } else {\n                channel = 7.787 * channel + 16 / 116\n            }\n            return channel\n        })\n\n        const Lx = 116 * Y - 16\n        const ax = 500 * (X - Y)\n        const bx = 200 * (Y - Z)\n        return [Lx, ax, bx]\n    }\n\n    const RGB_XYZ_compand = function(rgbArray, iccProfile) {\n        // convert to fractions\n        const fractionedRGB = rgbArray.map(channel => channel / 255)\n\n        let inverse\n        switch (iccProfile.name) {\n            case 'Adobe RGB (1998)':\n                inverse = inverseGamma\n                break\n            case 'eciRGB v2':\n                inverse = inverseLx\n                break\n            case 'sRGB IEC61966-2.1':\n                inverse = inverseSRGB\n                break\n            default:\n                console.error(`iccProfile \"${iccProfileName}\" is not supported`)\n                return\n        }\n        const inversedRGB = inverse(fractionedRGB, iccProfile)\n\n        const X =\n            inversedRGB[0] * 100 * iccProfile.matrix.D50.X.red +\n            inversedRGB[1] * 100 * iccProfile.matrix.D50.X.green +\n            inversedRGB[2] * 100 * iccProfile.matrix.D50.X.blue\n        const Y =\n            inversedRGB[0] * 100 * iccProfile.matrix.D50.Y.red +\n            inversedRGB[1] * 100 * iccProfile.matrix.D50.Y.green +\n            inversedRGB[2] * 100 * iccProfile.matrix.D50.Y.blue\n        const Z =\n            inversedRGB[0] * 100 * iccProfile.matrix.D50.Z.red +\n            inversedRGB[1] * 100 * iccProfile.matrix.D50.Z.green +\n            inversedRGB[2] * 100 * iccProfile.matrix.D50.Z.blue\n        return [X, Y, Z]\n    }\n\n    const XYZ_Lab = function(xyzArray) {\n        // photoshop shows lab values with D50\n        return XYZ_CIELab(xyzArray, whitePoint.D50)\n    }\n\n    return {\n        rgb2XYZ: RGB_XYZ_compand,\n        XYZ2Lab: XYZ_Lab,\n        rgb2Lab: function(rgbArray, iccProfileName) {\n            const xyzArray = RGB_XYZ_compand(\n                rgbArray,\n                rgbSpaces[iccProfileName],\n            )\n            const labArray = XYZ_CIELab(xyzArray, whitePoint.D50)\n            return labArray\n        },\n        cases: cases,\n    }\n})()\n\nexport default rgbLabConversion\n"],"names":["whitePoint","rgbSpaces","AdobeRGB1998","name","gamma","matrix","D50","X","red","green","blue","Y","Z","D65","whitepoint","eciRGB_v2","sRGB","cases","squares","rgb","rgbLabConversion","inverseSRGB","fractionedRGB","iccProfile","map","channel","Math","pow","inverseLx","inverseGamma","XYZ_CIELab","xyzArray","sizedXYZ","index","RGB_XYZ_compand","rgbArray","inverse","console","error","iccProfileName","inversedRGB","rgb2XYZ","XYZ2Lab","rgb2Lab"],"mappings":"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"}