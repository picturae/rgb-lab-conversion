{"version":3,"file":"index.js","sources":["../src/data.js","../src/index.js"],"sourcesContent":["\nconst whitePoint = {\n  D50: [0.96422, 1, 0.82521],\n  D65: [0.95047, 1, 1.08883],\n}\n\nconst rgbSpaces = {\n  AdobeRGB1998: {\n    gamma: 2.19921875,\n    matrix: {\n      D50: {\n        X: {red: 0.6097559, green: 0.2052401, blue: 0.1492240},\n        Y: {red: 0.3111242, green: 0.6256560, blue: 0.0632197},\n        Z: {red: 0.0194811, green: 0.0608902, blue: 0.7448387},\n      },\n      D65: {\n        X: {red: 0.5767309, green: 0.1855540, blue: 0.1881852},\n        Y: {red: 0.2973769, green: 0.6273491, blue: 0.0752741},\n        Z: {red: 0.0270343, green: 0.0706872, blue: 0.9911085},\n      },\n    },\n    whitepoint: 'D65',\n  },\n  eciRGB_v2: {\n    gamma: 1.8,\n    matrix: {\n      D50: {\n        X: {red: 0.6502043, green: 0.1780774, blue: 0.1359384},\n        Y: {red: 0.3202499, green: 0.6020711, blue: 0.0776791},\n        Z: {red: 0.0000000, green: 0.0678390, blue: 0.7573710},\n      },\n      D65: {\n        X: {red: 0.67, green: 0.21, blue: 0.14},\n        Y: {red: 0.33, green: 0.71, blue: 0.08},\n        Z: {red: 0, green: 0.08, blue: 0.78},\n      },\n    },\n    whitepoint: 'D50',\n  },\n  sRGB: {\n    gamma: -2.2,\n    matrix: {\n      D50: {\n        X: {red: 0.4360747, green: 0.3850649, blue: 0.1430804},\n        Y: {red: 0.2225045, green: 0.7168786, blue: 0.0606169},\n        Z: {red: 0.0139322, green: 0.0971045, blue: 0.7141733},\n      },\n      D65: {\n        X: {red: 0.4124564, green: 0.3575761, blue: 0.1804375},\n        Y: {red: 0.2126729, green: 0.7151522, blue: 0.0721750},\n        Z: {red: 0.0193339, green: 0.1191920, blue: 0.9503041},\n      },\n    },\n    whitepoint: 'D65',\n  },\n}\n\nconst rgb2LabStandard = [\n  { rgb: [51,51,51], eciRGB_v2: [20,0,0], AdobeRGB1998: [20,0,0] },\n  { rgb: [204,204,204], eciRGB_v2: [80,0,0], AdobeRGB1998: [83,0,0], },\n  { rgb: [154,51,52], eciRGB_v2: [40,53,34], AdobeRGB1998: [42,53,33], },\n\n  { rgb: [153,51,153], eciRGB_v2: [43,55,-26], AdobeRGB1998: [44,60,-31], },\n  { rgb: [255,255,51], eciRGB_v2: [97,-11,99], AdobeRGB1998: [98,-16,96], },\n  { rgb: [255,102,52], eciRGB_v2: [69,78,79], AdobeRGB1998: [69,69,68], },\n\n  { rgb: [50,51,255], eciRGB_v2: [39,39,-100], AdobeRGB1998: [36,57,-104], },\n  { rgb: [52,255,51], eciRGB_v2: [83,-128,74], AdobeRGB1998: [84,-121,79], },\n  { rgb: [255,51,52], eciRGB_v2: [65,91,77], AdobeRGB1998: [64,86,63], },\n]\n\nexport {\n  whitePoint,\n  rgbSpaces,\n  rgb2LabStandard,\n}\n","import {\n  whitePoint,\n  rgbSpaces,\n  rgb2LabStandard,\n} from './data.js'\n\nconst rgbLabConversion = (function (){\n\n  const invS_RGB_XYZ = function (rgbArray, iccProfile) {\n    // Inverse sRGB Companding\n    var red = ( rgbArray[0] / 255 )\n    var green = ( rgbArray[1] / 255 )\n    var blue = ( rgbArray[2] / 255 )\n\n    if ( red > 0.04045 ) {\n      red = Math.pow( ( ( red + 0.055 ) / 1.055 ), 2.4 )\n    } else {\n      red = red / 12.92\n    }\n    if ( green > 0.04045 ) {\n      green = Math.pow( ( ( green + 0.055 ) / 1.055 ), 2.4 )\n    } else {\n      green = green / 12.92\n    }\n    if ( blue > 0.04045 ) {\n      blue = Math.pow( ( ( blue + 0.055 ) / 1.055 ), 2.4 )\n    } else {\n      blue = blue / 12.92\n    }\n\n    red = red * 100\n    green = green * 100\n    blue = blue * 100\n\n    var X = red * iccProfile.matrix.D50.X.red + green * iccProfile.matrix.D50.X.green + blue * iccProfile.matrix.D50.X.blue\n    var Y = red * iccProfile.matrix.D50.Y.red + green * iccProfile.matrix.D50.Y.green + blue * iccProfile.matrix.D50.Y.blue\n    var Z = red * iccProfile.matrix.D50.Z.red + green * iccProfile.matrix.D50.Z.green + blue * iccProfile.matrix.D50.Z.blue\n    return [ X, Y, Z ]\n  }\n\n  const invGamma_RGB_XYZ = function (rgbArray, iccProfile) {\n    // Inverse Gamma Companding\n    var red = ( rgbArray[0] / 255 )\n    var green = ( rgbArray[1] / 255 )\n    var blue = ( rgbArray[2] / 255 )\n\n    red = Math.pow( red, iccProfile.gamma )\n    green = Math.pow( green, iccProfile.gamma )\n    blue = Math.pow( blue, iccProfile.gamma )\n\n    red = red * 100\n    green = green * 100\n    blue = blue * 100\n\n    var X = red * iccProfile.matrix.D50.X.red + green * iccProfile.matrix.D50.X.green + blue * iccProfile.matrix.D50.X.blue\n    var Y = red * iccProfile.matrix.D50.Y.red + green * iccProfile.matrix.D50.Y.green + blue * iccProfile.matrix.D50.Y.blue\n    var Z = red * iccProfile.matrix.D50.Z.red + green * iccProfile.matrix.D50.Z.green + blue * iccProfile.matrix.D50.Z.blue\n    return [ X, Y, Z ]\n  }\n\n  const XYZ_CIELab = function ( xyzArray, whitePoint) {\n\n    var X = ( xyzArray[0] / whitePoint[0] / 100 )\n    var Y = ( xyzArray[1] / whitePoint[1] / 100 )\n    var Z = ( xyzArray[2] / whitePoint[2] / 100 )\n\n    if ( X > 0.008856 ) X = Math.pow( X , ( 1/3 ) )\n    else                    X = ( 7.787 * X ) + ( 16 / 116 )\n    if ( Y > 0.008856 ) Y = Math.pow( Y , ( 1/3 ) )\n    else                    Y = ( 7.787 * Y ) + ( 16 / 116 )\n    if ( Z > 0.008856 ) Z = Math.pow( Z , ( 1/3 ) )\n    else                    Z = ( 7.787 * Z ) + ( 16 / 116 )\n\n    var Lx = ( 116 * Y ) - 16\n    var ax = 500 * ( X - Y )\n    var bx = 200 * ( Y - Z )\n    return [ Lx, ax, bx ]\n  }\n\n  const RGB_XYZ = function ( rgbArray, iccProfileName ) {\n    var RGB_XYZ_function = invGamma_RGB_XYZ\n    if ( iccProfileName === 'eciRGB_v2') {\n      RGB_XYZ_function = invS_RGB_XYZ // mss via een andere functie\n    }\n    return RGB_XYZ_function ( rgbArray, rgbSpaces[iccProfileName] )\n  }\n\n  const XYZ_Lab = function ( xyzArray ) {\n    return XYZ_CIELab ( xyzArray, whitePoint.D50 )\n  }\n\n  return {\n    RGB_XYZ: RGB_XYZ,\n    XYZ_Lab: XYZ_Lab,\n    RGB_Lab: function ( rgbArray, iccProfileName ) {\n      var xyzArray = RGB_XYZ ( rgbArray, iccProfileName )\n      var labArray = XYZ_CIELab ( xyzArray, whitePoint.D50 )\n      return labArray\n    },\n    rgb2LabStandard: rgb2LabStandard,\n  }\n})()\n\nexport default rgbLabConversion\n"],"names":["whitePoint","rgbSpaces","AdobeRGB1998","gamma","matrix","D50","X","red","green","blue","Y","Z","D65","whitepoint","eciRGB_v2","sRGB","rgb2LabStandard","rgb","rgbLabConversion","invS_RGB_XYZ","rgbArray","iccProfile","Math","pow","invGamma_RGB_XYZ","XYZ_CIELab","xyzArray","RGB_XYZ","iccProfileName","RGB_XYZ_function","XYZ_Lab","RGB_Lab"],"mappings":"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"}