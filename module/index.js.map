{"version":3,"file":"index.js","sources":["../src/data.js","../src/index.js"],"sourcesContent":["const whitePoint = {\n  D50: [0.96422, 1, 0.82521],\n  D65: [0.95047, 1, 1.08883]\n};\n\nconst rgbSpaces = {\n  AdobeRGB1998: {\n    gamma: 2.19921875,\n    matrix: {\n      D50: {\n        X: { red: 0.6097559, green: 0.2052401, blue: 0.149224 },\n        Y: { red: 0.3111242, green: 0.625656, blue: 0.0632197 },\n        Z: { red: 0.0194811, green: 0.0608902, blue: 0.7448387 }\n      },\n      D65: {\n        X: { red: 0.5767309, green: 0.185554, blue: 0.1881852 },\n        Y: { red: 0.2973769, green: 0.6273491, blue: 0.0752741 },\n        Z: { red: 0.0270343, green: 0.0706872, blue: 0.9911085 }\n      }\n    },\n    whitepoint: \"D65\"\n  },\n  eciRGB_v2: {\n    gamma: 1.8,\n    matrix: {\n      D50: {\n        X: { red: 0.6502043, green: 0.1780774, blue: 0.1359384 },\n        Y: { red: 0.3202499, green: 0.6020711, blue: 0.0776791 },\n        Z: { red: 0.0, green: 0.067839, blue: 0.757371 }\n      },\n      D65: {\n        X: { red: 0.67, green: 0.21, blue: 0.14 },\n        Y: { red: 0.33, green: 0.71, blue: 0.08 },\n        Z: { red: 0, green: 0.08, blue: 0.78 }\n      }\n    },\n    whitepoint: \"D50\"\n  },\n  sRGB: {\n    gamma: -2.2,\n    matrix: {\n      D50: {\n        X: { red: 0.4360747, green: 0.3850649, blue: 0.1430804 },\n        Y: { red: 0.2225045, green: 0.7168786, blue: 0.0606169 },\n        Z: { red: 0.0139322, green: 0.0971045, blue: 0.7141733 }\n      },\n      D65: {\n        X: { red: 0.4124564, green: 0.3575761, blue: 0.1804375 },\n        Y: { red: 0.2126729, green: 0.7151522, blue: 0.072175 },\n        Z: { red: 0.0193339, green: 0.119192, blue: 0.9503041 }\n      }\n    },\n    whitepoint: \"D65\"\n  }\n};\n\nconst rgb2LabStandard = [\n  // squares\n  { rgb: [51, 51, 51], eciRGB_v2: [20, 0, 0], AdobeRGB1998: [20, 0, 0] },\n  { rgb: [204, 204, 204], eciRGB_v2: [80, 0, 0], AdobeRGB1998: [83, 0, 0] },\n  { rgb: [154, 51, 52], eciRGB_v2: [40, 53, 34], AdobeRGB1998: [42, 53, 33] },\n\n  {\n    rgb: [153, 51, 153],\n    eciRGB_v2: [43, 55, -26],\n    AdobeRGB1998: [44, 60, -31]\n  },\n  {\n    rgb: [255, 255, 51],\n    eciRGB_v2: [97, -11, 99],\n    AdobeRGB1998: [98, -16, 96]\n  },\n  { rgb: [255, 102, 52], eciRGB_v2: [69, 78, 79], AdobeRGB1998: [69, 69, 68] },\n\n  {\n    rgb: [50, 51, 255],\n    eciRGB_v2: [39, 39, -100],\n    AdobeRGB1998: [36, 57, -104]\n  },\n  {\n    rgb: [52, 255, 51],\n    eciRGB_v2: [83, -128, 74],\n    AdobeRGB1998: [84, -121, 79]\n  },\n  { rgb: [255, 51, 52], eciRGB_v2: [65, 91, 77], AdobeRGB1998: [64, 86, 63] }\n];\n\nexport { whitePoint, rgbSpaces, rgb2LabStandard };\n","import { whitePoint, rgbSpaces, rgb2LabStandard } from \"./data.js\";\n\nconst rgbLabConversion = (function() {\n  const invS_RGB_XYZ = function(rgbArray, iccProfile) {\n    // Inverse sRGB Companding\n    var red = rgbArray[0] / 255;\n    var green = rgbArray[1] / 255;\n    var blue = rgbArray[2] / 255;\n\n    if (red > 0.04045) {\n      red = Math.pow((red + 0.055) / 1.055, 2.4);\n    } else {\n      red = red / 12.92;\n    }\n    if (green > 0.04045) {\n      green = Math.pow((green + 0.055) / 1.055, 2.4);\n    } else {\n      green = green / 12.92;\n    }\n    if (blue > 0.04045) {\n      blue = Math.pow((blue + 0.055) / 1.055, 2.4);\n    } else {\n      blue = blue / 12.92;\n    }\n\n    red = red * 100;\n    green = green * 100;\n    blue = blue * 100;\n\n    var X =\n      red * iccProfile.matrix.D50.X.red +\n      green * iccProfile.matrix.D50.X.green +\n      blue * iccProfile.matrix.D50.X.blue;\n    var Y =\n      red * iccProfile.matrix.D50.Y.red +\n      green * iccProfile.matrix.D50.Y.green +\n      blue * iccProfile.matrix.D50.Y.blue;\n    var Z =\n      red * iccProfile.matrix.D50.Z.red +\n      green * iccProfile.matrix.D50.Z.green +\n      blue * iccProfile.matrix.D50.Z.blue;\n    return [X, Y, Z];\n  };\n\n  const invGamma_RGB_XYZ = function(rgbArray, iccProfile) {\n    // Inverse Gamma Companding\n    var red = rgbArray[0] / 255;\n    var green = rgbArray[1] / 255;\n    var blue = rgbArray[2] / 255;\n\n    red = Math.pow(red, iccProfile.gamma);\n    green = Math.pow(green, iccProfile.gamma);\n    blue = Math.pow(blue, iccProfile.gamma);\n\n    red = red * 100;\n    green = green * 100;\n    blue = blue * 100;\n\n    var X =\n      red * iccProfile.matrix.D50.X.red +\n      green * iccProfile.matrix.D50.X.green +\n      blue * iccProfile.matrix.D50.X.blue;\n    var Y =\n      red * iccProfile.matrix.D50.Y.red +\n      green * iccProfile.matrix.D50.Y.green +\n      blue * iccProfile.matrix.D50.Y.blue;\n    var Z =\n      red * iccProfile.matrix.D50.Z.red +\n      green * iccProfile.matrix.D50.Z.green +\n      blue * iccProfile.matrix.D50.Z.blue;\n    return [X, Y, Z];\n  };\n\n  const XYZ_CIELab = function(xyzArray, whitePoint) {\n    var X = xyzArray[0] / whitePoint[0] / 100;\n    var Y = xyzArray[1] / whitePoint[1] / 100;\n    var Z = xyzArray[2] / whitePoint[2] / 100;\n\n    if (X > 0.008856) X = Math.pow(X, 1 / 3);\n    else X = 7.787 * X + 16 / 116;\n    if (Y > 0.008856) Y = Math.pow(Y, 1 / 3);\n    else Y = 7.787 * Y + 16 / 116;\n    if (Z > 0.008856) Z = Math.pow(Z, 1 / 3);\n    else Z = 7.787 * Z + 16 / 116;\n\n    var Lx = 116 * Y - 16;\n    var ax = 500 * (X - Y);\n    var bx = 200 * (Y - Z);\n    return [Lx, ax, bx];\n  };\n\n  const RGB_XYZ = function(rgbArray, iccProfileName) {\n    var RGB_XYZ_function = invGamma_RGB_XYZ;\n    if (iccProfileName === \"eciRGB_v2\") {\n      RGB_XYZ_function = invS_RGB_XYZ; // mss via een andere functie\n    }\n    return RGB_XYZ_function(rgbArray, rgbSpaces[iccProfileName]);\n  };\n\n  const XYZ_Lab = function(xyzArray) {\n    return XYZ_CIELab(xyzArray, whitePoint.D50);\n  };\n\n  return {\n    rgb2XYZ: RGB_XYZ,\n    XYZ2Lab: XYZ_Lab,\n    rgb2Lab: function(rgbArray, iccProfileName) {\n      var xyzArray = RGB_XYZ(rgbArray, iccProfileName);\n      var labArray = XYZ_CIELab(xyzArray, whitePoint.D50);\n      return labArray;\n    },\n    rgb2LabStandard: rgb2LabStandard\n  };\n})();\n\nexport default rgbLabConversion;\n"],"names":["whitePoint","rgbSpaces","AdobeRGB1998","gamma","matrix","D50","X","red","green","blue","Y","Z","D65","whitepoint","eciRGB_v2","sRGB","rgb2LabStandard","rgb","rgbLabConversion","invS_RGB_XYZ","rgbArray","iccProfile","Math","pow","invGamma_RGB_XYZ","XYZ_CIELab","xyzArray","RGB_XYZ","iccProfileName","RGB_XYZ_function","rgb2XYZ","XYZ2Lab","rgb2Lab"],"mappings":"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"}